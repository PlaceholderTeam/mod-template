file: build.gradle

commands:
  - replace:
      line: 4
      if: cf
      else: delete
      from: "//"
      to: ""
  - replace:
      line: 5
      if: m
      else: delete
      from: "//"
      to: ""

  - insert:
      line: 7
      if: m
      text: "import com.modrinth.minotaur.TaskModrinthUpload\n\n"
  - delete:
      line: 12
      if: gh
  - insert:
      line: 13
      if: gh
      text: "\nboolean isBuild = System.getenv('GITHUB_WORKFLOW') == 'build'\nversion =
      !isBuild ? project.mod_version : \"${project.mod_version}+build.${System.getenv('GITHUB_RUN_NUMBER')}\"\n"

  - insert:
      line: 63
      if: m
      text: "\ntask modrinth (type: TaskModrinthUpload, dependsOn: build) {\n	token =
      project.hasProperty('modrinth_token') ? project.property('modrinth_token') : System.getenv('MODRINTH_TOKEN')\n	projectId =
      '********'\n	versionNumber = project.version\n	uploadFile =
      remapJar\n	addGameVersion('1.16')\n	addGameVersion('1.16.1')\n	addGameVersion('1.16.2')\n	addGameVersion('1.16.3')\n	addGameVersion('1.16.4')\n	addLoader('fabric')
      \n\n	FileTree files = fileTree(dir: './build/libs/')\n	files.each {f ->\n		if (f.name !=
      \"${archivesBaseName}-${version}.jar\") { // don't upload the remapJar file again\n			addFile(f)\n		}\n	}\n}\n"

  - insert:
      line: 85
      if: cf
      text: "\n//curseforge {\n//	if (project.hasProperty('curse_api_key') || System.getenv('CURSE_API_KEY') != null) {\n//		apiKey =
      project.hasProperty('curse_api_key') ? project.property('curse_api_key') : System.getenv('CURSE_API_KEY')\n//	}\n//	project
      {\n//		id = '******'\n//		changelog =
      'A changelog can be found at https://github.com/ByMartrixx/多template-mod-dir多/releases/latest'\n//		releaseType =
      'release'\n//		addGameVersion '1.16'\n//		addGameVersion '1.16.1'\n//		addGameVersion '1.16.2'\n//		addGameVersion
      '1.16.3'\n//		addGameVersion '1.16.4'\n//		addGameVersion 'Fabric'\n//		mainArtifact(remapJar) {\n//			displayName =
      \"多Template_Mod_Name多 $version\"\n//		}\n//		afterEvaluate
      {\n//			uploadTask.dependsOn(\"remapJar\")\n//		}\n//	}\n//	options {\n//		forgeGradleIntegration = false\n//	}\n//}"
